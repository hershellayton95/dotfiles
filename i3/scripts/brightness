# See README.md for usage instructions
bar_color="#7f7fff"
brightness_step=2

# Uses regex to get brightness from xbacklight
function get_brightness {
#    xbacklight | grep -Po '[0-9]{1,3}' | head -n 1
	brightnessctl -m | grep -Eo '[0-9]+' | head -n 2 | tail  -n 1
}

# Always returns the same icon - I couldn't get the brightness-low icon to work with fontawesome
function get_brightness_icon {
    brightness_icon="ï†…"
}

# Displays a brightness notification using dunstify
function show_brightness_notif {
    brightness=$(get_brightness)
    get_brightness_icon
    dunstify -t 1000 -r 2593 -u normal "$brightness_icon $brightness%" -h int:value:$brightness -h string:hlcolor:$bar_color
}

# Main function - Takes user input, "volume_up", "volume_down", "brightness_up", or "brightness_down"
case $1 in
    brightness_up)
    # Increases brightness using brightnessctl
    brightnessctl set +$brightness_step%
    show_brightness_notif
    ;;

    brightness_down)
    # Decreases brightness using brightnessctl
    if [ $(brightnessctl -m | grep -Eo '[0-9]+' | head -n 2 | tail  -n 1) -gt $brightness_step ]; then
        brightnessctl set $brightness_step%-
    show_brightness_notif
    else
        brightnessctl set $brightness_step%
    fi
    ;;
esac
